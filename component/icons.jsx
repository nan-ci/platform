import { css } from '../lib/dom.js'

css(`
svg.icon {
  height: 2ch;
  margin: -0.5ch 0;
}
`)

const Icon = (d, props) => (rest) => (
  <svg class="icon" viewBox="0 0 24 24" {...props} {...rest}>
    <path d={d} />
  </svg>
)

export const Github = Icon(
  'M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22',
  {
    'stroke-width': '2',
    'stroke-linecap': 'round',
    'stroke-linejoin': 'round',
    stroke: 'currentColor',
    fill: 'none',
  },
)

export const Discord = Icon(
  'M13.914 14.58a8.998 8.998 0 0 1-.484.104 7.06 7.06 0 0 1-2.664-.01c-.154-.03-.372-.083-.653-.158l-.921 1.197c-2.273-.073-3.137-1.596-3.137-1.596 0-3.381 1.481-6.122 1.481-6.122 1.481-1.133 2.89-1.102 2.89-1.102l.403.525a1.12 1.12 0 0 1 .112-.01 8.527 8.527 0 0 1 2.314.01l.442-.525s1.41-.031 2.89 1.103c0 0 1.482 2.74 1.482 6.121 0 0-.875 1.522-3.148 1.596l-1.007-1.134zM10.076 11C9.475 11 9 11.45 9 12s.485 1 1.076 1c.6 0 1.075-.45 1.075-1 .01-.55-.474-1-1.075-1zm3.848 0c-.6 0-1.075.45-1.075 1s.485 1 1.075 1c.601 0 1.076-.45 1.076-1s-.475-1-1.076-1zM21 23l-4.99-5H19V4H5v14h11.003l.57 2H5a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v19z',
  { fill: 'currentColor' },
)

export const Location = ({ color, size, ...props }) => {
  return (
    <svg
      width={size}
      height={size}
      viewBox="0 0 512 512"
      fill={color}
      {...props}
      xmlns="http://www.w3.org/2000/svg"
    >
      <g>
        <path
          style="fill:#61DE56;"
          d="M317.8,335.3c-5.7-0.3-11.1,2.1-14.099,6.901L256,416.6l-47.701-74.399
c-2.999-4.801-8.399-7.5-14.099-6.901C94.9,345.801,31,379.701,31,422c0,58.5,115.8,90,225,90s225-31.5,225-90
C481,379.701,417.1,345.801,317.8,335.3z"
        />
        <path
          style="fill:#13C37B;"
          d="M481,422c0,58.5-115.8,90-225,90v-95.4l47.701-74.399c2.999-4.801,8.399-7.202,14.099-6.901
C417.1,345.801,481,379.701,481,422z"
        />
        <path
          style="fill:#FD3018;"
          d="M256,0C166,0,91,72.599,91,165c0,35.099,10.499,66.599,30.901,96l121.5,191.6
c2.999,4.799,7.8,6.899,12.6,6.899c4.799,0,9.6-2.1,12.599-6.899l122.1-192.2c19.801-28.2,30.3-61.2,30.3-95.4
C421,74.099,346.901,0,256,0z M256,240c-41.355,0-75-33.645-75-75s33.645-75,75-75s75,33.645,75,75S297.355,240,256,240z"
        />
        <path
          style="fill:#E61E14;"
          d="M256,0v90l0,0c41.355,0,75,33.645,75,75s-33.645,75-75,75l0,0v219.5c4.799,0,9.6-2.1,12.599-6.899
L390.7,260.4c19.801-28.2,30.3-61.2,30.3-95.4C421,74.099,346.901,0,256,0z"
        />
      </g>
    </svg>
  )
}

export const NaN = ({ size }) => {
  return (
    <svg
      version="1.1"
      xmlns="http://www.w3.org/2000/svg"
      xmlns:xlink="http://www.w3.org/1999/xlink"
      width={size}
      height={size}
      viewBox="0, 0, 400,400"
    >
      <g id="svgg">
        <path
          id="path0"
          d="M101.000 101.200 L 2.201 200.000 21.301 219.100 L 40.400 238.199 119.700 158.800 L 199.000 79.400 119.700 158.600 L 40.400 237.799 21.500 218.899 L 2.601 200.000 101.300 101.300 L 200.000 2.600 298.700 101.300 L 397.399 200.000 378.500 218.899 L 359.600 237.799 280.300 158.600 L 201.000 79.400 280.300 158.800 L 359.600 238.199 378.699 219.100 L 397.799 200.000 299.000 101.200 C 244.660 46.860,200.110 2.400,200.000 2.400 C 199.890 2.400,155.340 46.860,101.000 101.200 M140.800 220.600 L 81.801 279.600 101.101 298.900 L 120.400 318.199 159.700 278.800 L 199.000 239.401 159.700 278.600 L 120.400 317.799 101.300 298.699 L 82.201 279.600 141.100 220.700 L 200.000 161.800 258.900 220.700 L 317.799 279.600 298.700 298.699 L 279.600 317.799 240.300 278.600 L 201.000 239.401 240.300 278.800 L 279.600 318.199 298.899 298.900 L 318.199 279.600 259.200 220.600 C 226.751 188.150,200.111 161.600,200.000 161.600 C 199.889 161.600,173.249 188.150,140.800 220.600 M180.799 340.601 L 161.802 359.601 180.901 378.700 L 200.000 397.799 219.099 378.700 L 238.198 359.601 219.201 340.601 C 208.752 330.150,200.112 321.600,200.000 321.600 C 199.888 321.600,191.248 330.150,180.799 340.601 M219.001 340.801 L 237.798 359.601 218.899 378.500 L 200.000 397.399 181.101 378.500 L 162.202 359.601 180.999 340.801 C 191.338 330.460,199.888 322.000,200.000 322.000 C 200.112 322.000,208.662 330.460,219.001 340.801 "
          stroke="none"
          fill="#747cfc"
          fill-rule="evenodd"
        ></path>
        <path
          id="path1"
          d="M100.500 100.500 C 46.105 154.895,1.600 199.671,1.600 200.002 C 1.600 200.333,10.285 209.242,20.900 219.802 L 40.200 239.000 21.100 219.798 C 10.595 209.238,2.000 200.327,2.000 199.998 C 2.000 199.214,199.217 2.000,200.001 2.000 C 200.784 2.000,398.000 199.215,398.000 199.999 C 398.000 200.328,389.405 209.238,378.900 219.798 L 359.800 239.000 379.100 219.802 C 389.715 209.242,398.400 200.332,398.400 200.001 C 398.400 199.215,200.785 1.600,199.999 1.600 C 199.669 1.600,154.895 46.105,100.500 100.500 M140.050 220.283 L 80.700 279.699 100.501 299.500 L 120.302 319.301 159.951 279.649 C 181.758 257.840,199.600 239.863,199.600 239.699 C 199.600 239.535,181.734 257.266,159.899 279.101 L 120.198 318.801 100.699 299.299 L 81.201 279.798 140.601 220.399 L 200.000 161.001 259.399 220.399 L 318.799 279.798 299.301 299.299 L 279.802 318.801 240.101 279.101 C 218.266 257.266,200.400 239.535,200.400 239.699 C 200.400 239.863,218.242 257.840,240.049 279.649 L 279.698 319.301 299.499 299.500 L 319.300 279.699 259.850 220.250 C 227.153 187.552,200.176 160.815,199.900 160.833 C 199.625 160.851,172.693 187.604,140.050 220.283 M180.198 379.100 C 190.758 389.715,199.668 398.400,200.000 398.400 C 200.332 398.400,209.242 389.715,219.802 379.100 L 239.000 359.800 219.798 378.900 C 209.238 389.405,200.328 398.000,200.000 398.000 C 199.672 398.000,190.762 389.405,180.202 378.900 L 161.000 359.800 180.198 379.100 "
          stroke="none"
          fill="#7484fc"
          fill-rule="evenodd"
        ></path>
        <path
          id="path2"
          d="M99.859 99.941 C 33.723 166.077,0.366 199.703,0.459 200.141 C 0.589 200.749,39.919 240.400,40.393 240.400 C 40.509 240.400,76.468 204.535,120.302 160.700 L 200.000 81.000 279.698 160.700 C 323.532 204.535,359.491 240.400,359.607 240.400 C 360.081 240.400,399.411 200.749,399.541 200.141 C 399.707 199.360,200.947 0.400,200.000 0.400 C 199.670 0.400,154.606 45.193,99.859 99.941 M299.500 100.500 C 353.895 154.895,398.400 199.670,398.400 200.001 C 398.400 200.332,389.670 209.332,378.999 220.001 L 359.599 239.398 279.799 159.599 L 200.000 79.801 120.201 159.599 L 40.401 239.398 21.001 220.001 C 10.330 209.332,1.600 200.333,1.600 200.002 C 1.600 199.216,199.214 1.600,199.999 1.600 C 200.329 1.600,245.105 46.105,299.500 100.500 M139.400 219.600 L 79.401 279.600 99.900 300.099 L 120.400 320.599 160.200 280.800 L 200.000 241.002 239.800 280.800 L 279.600 320.599 300.100 300.099 L 320.599 279.600 260.600 219.600 C 227.601 186.600,200.331 159.600,200.000 159.600 C 199.669 159.600,172.399 186.600,139.400 219.600 M259.850 220.250 L 319.300 279.699 299.500 299.499 L 279.700 319.299 240.047 279.650 C 218.239 257.842,200.217 240.000,200.000 240.000 C 199.783 240.000,181.761 257.842,159.953 279.650 L 120.300 319.299 100.500 299.499 L 80.700 279.699 140.050 220.283 C 172.693 187.604,199.625 160.851,199.900 160.833 C 200.176 160.815,227.153 187.552,259.850 220.250 M179.500 339.483 C 168.555 350.428,159.600 359.481,159.600 359.601 C 159.600 360.278,199.313 399.400,200.000 399.400 C 200.688 399.400,240.400 360.278,240.400 359.600 C 240.400 359.074,200.730 319.789,200.100 319.691 C 199.635 319.619,192.720 326.263,179.500 339.483 M220.000 340.200 L 239.397 359.600 220.000 379.000 C 209.332 389.670,200.332 398.400,200.000 398.400 C 199.668 398.400,190.668 389.670,180.000 379.000 L 160.603 359.600 180.000 340.200 C 190.668 329.530,199.668 320.800,200.000 320.800 C 200.332 320.800,209.332 329.530,220.000 340.200 "
          stroke="none"
          fill="#8c94fc"
          fill-rule="evenodd"
        ></path>
        <path
          id="path3"
          d="M100.700 100.700 C 46.415 154.985,2.000 199.671,2.000 200.002 C 2.000 200.333,10.640 209.242,21.201 219.801 L 40.401 238.998 120.201 159.199 L 200.000 79.401 279.799 159.199 L 359.599 238.998 378.799 219.801 C 389.360 209.242,398.000 200.332,398.000 200.001 C 398.000 199.215,200.785 2.000,199.999 2.000 C 199.669 2.000,154.985 46.415,100.700 100.700 M299.000 101.200 L 397.799 200.000 378.699 219.100 L 359.600 238.199 280.300 158.800 L 201.000 79.400 280.300 158.600 L 359.600 237.799 378.500 218.899 L 397.399 200.000 298.700 101.300 L 200.000 2.600 101.300 101.300 L 2.601 200.000 21.500 218.899 L 40.400 237.799 119.700 158.600 L 199.000 79.400 119.700 158.800 L 40.400 238.199 21.301 219.100 L 2.201 200.000 101.000 101.200 C 155.340 46.860,199.890 2.400,200.000 2.400 C 200.110 2.400,244.660 46.860,299.000 101.200 M140.499 220.501 L 81.199 279.802 100.701 299.301 L 120.202 318.799 159.601 279.300 L 199.000 239.800 159.700 278.999 L 120.400 318.199 101.100 298.899 L 81.801 279.600 140.900 220.500 L 200.000 161.400 259.100 220.500 L 318.199 279.600 298.900 298.899 L 279.600 318.199 240.300 278.999 L 201.000 239.800 240.399 279.300 L 279.798 318.799 299.299 299.301 L 318.801 279.802 259.501 220.501 C 226.886 187.885,200.111 161.200,200.000 161.200 C 199.889 161.200,173.114 187.885,140.499 220.501 M141.000 220.800 L 82.201 279.600 101.300 298.699 L 120.400 317.799 159.500 278.773 C 197.777 240.567,198.632 239.747,200.104 239.777 C 201.553 239.808,203.012 241.214,240.604 278.804 L 279.600 317.799 298.700 298.699 L 317.799 279.600 259.000 220.800 C 226.661 188.460,200.111 162.000,200.000 162.000 C 199.889 162.000,173.339 188.460,141.000 220.800 M180.200 340.400 L 161.003 359.600 180.200 378.800 C 190.758 389.360,199.668 398.000,200.000 398.000 C 200.332 398.000,209.242 389.360,219.800 378.800 L 238.997 359.600 219.800 340.400 C 209.242 329.840,200.332 321.200,200.000 321.200 C 199.668 321.200,190.758 329.840,180.200 340.400 M219.201 340.601 L 238.198 359.601 219.099 378.700 L 200.000 397.799 180.901 378.700 L 161.802 359.601 180.799 340.601 C 191.248 330.150,199.888 321.600,200.000 321.600 C 200.112 321.600,208.752 330.150,219.201 340.601 M180.999 340.801 L 162.202 359.601 181.101 378.500 L 200.000 397.399 218.899 378.500 L 237.798 359.601 219.001 340.801 C 208.662 330.460,200.112 322.000,200.000 322.000 C 199.888 322.000,191.338 330.460,180.999 340.801 "
          stroke="none"
          fill="#787cfc"
          fill-rule="evenodd"
        ></path>
        <path
          id="path4"
          d=""
          stroke="none"
          fill="#7c7cfc"
          fill-rule="evenodd"
        ></path>
      </g>
    </svg>
  )
}

export const Point = ({ color, size, ...props }) => {
  return (
    <svg
      width={size}
      height={size}
      viewBox="0 0 426.667 426.667"
      fill={color}
      {...props}
      xmlns="http://www.w3.org/2000/svg"
    >
      <g>
        <path
          d="M213.333,106.667c-58.88,0-106.667,47.787-106.667,106.667S154.453,320,213.333,320S320,272.213,320,213.333
				S272.213,106.667,213.333,106.667z"
        />
        <path
          d="M213.333,0C95.467,0,0,95.467,0,213.333s95.467,213.333,213.333,213.333S426.667,331.2,426.667,213.333
				S331.2,0,213.333,0z M213.333,384c-94.293,0-170.667-76.373-170.667-170.667S119.04,42.667,213.333,42.667
				S384,119.04,384,213.333S307.627,384,213.333,384z"
        />
      </g>
    </svg>
  )
}

export const Progress = ({ size, color, ...props }) => {
  return (
    <svg
      fill={color}
      height={size}
      viewBox="0 0 512 512"
      width={size}
      {...props}
      xmlns="http://www.w3.org/2000/svg"
    >
      <g>
        <path d="m122.912 391.28h-103.258c-8.284 0-15 6.716-15 15v90.72c0 8.284 6.716 15 15 15h118.259v-105.72c-.001-8.284-6.716-15-15.001-15z" />
        <path d="m271.171 307.28h-88.259c-8.284 0-15 6.716-15 15v189.72h118.259v-189.72c0-8.284-6.716-15-15-15z" />
        <path d="m477.798 81.01 30.23-32.81c4.04-4.38 5.1-10.73 2.71-16.18-2.39-5.46-7.78-8.98-13.74-8.98h-96.699v-8.04c0-8.28-6.71-15-15-15-8.28 0-15 6.72-15 15v175h-39.13c-8.284 0-15 6.716-15 15v307h120.809c8.29 0 15-6.72 15-15v-292c0-8.28-6.71-15-15-15h-36.679v-53.67h96.699c6.07 0 11.54-3.66 13.86-9.27s1.03-12.07-3.27-16.35z" />
        <path d="m254.552 128.785c3.681 7.422 12.679 10.454 20.102 6.774 7.422-3.681 10.455-12.681 6.774-20.103-27.194-54.837-24.443-49.309-24.838-50.054-2.819-5.326-8.619-8.542-14.796-7.902-.042.004-.085.013-.128.018-1.227.138 2.05-.505-54.764 11.451-8.107 1.706-13.295 9.661-11.59 17.768 1.487 7.065 7.72 11.914 14.663 11.914 2.088 0 .743.173 27.124-5.379-19.67 38.61-45.271 73.796-76.36 104.887-38.103 38.104-82.373 67.977-131.58 88.789-7.63 3.228-11.199 12.028-7.972 19.658 3.229 7.637 12.034 11.197 19.658 7.973 52.783-22.325 100.258-54.357 141.106-95.207 33.293-33.293 60.725-70.978 81.813-112.338z" />
      </g>
    </svg>
  )
}

export const Chrono = ({ size, color, ...props }) => {
  return (
    <svg
      version="1.1"
      xmlns="http://www.w3.org/2000/svg"
      width={size}
      height={size}
      viewBox="0 0 465.2 465.2"
      fill={color}
      {...props}
    >
      <g>
        <path
          d="M279.591,423.714c-3.836,0.956-7.747,1.805-11.629,2.52c-10.148,1.887-16.857,11.647-14.98,21.804
				c0.927,4.997,3.765,9.159,7.618,11.876c3.971,2.795,9.025,4.057,14.175,3.099c4.623-0.858,9.282-1.867,13.854-3.008
				c10.021-2.494,16.126-12.646,13.626-22.662C299.761,427.318,289.618,421.218,279.591,423.714z"
        />
        <path
          d="M417.887,173.047c1.31,3.948,3.811,7.171,6.97,9.398c4.684,3.299,10.813,4.409,16.662,2.475
				c9.806-3.256,15.119-13.83,11.875-23.631c-1.478-4.468-3.118-8.95-4.865-13.314c-3.836-9.59-14.714-14.259-24.309-10.423
				c-9.585,3.834-14.256,14.715-10.417,24.308C415.271,165.528,416.646,169.293,417.887,173.047z"
        />
        <path
          d="M340.36,397.013c-3.299,2.178-6.704,4.286-10.134,6.261c-8.949,5.162-12.014,16.601-6.854,25.546
				c1.401,2.433,3.267,4.422,5.416,5.942c5.769,4.059,13.604,4.667,20.127,0.909c4.078-2.352,8.133-4.854,12.062-7.452
				c8.614-5.691,10.985-17.294,5.291-25.912C360.575,393.686,348.977,391.318,340.36,397.013z"
        />
        <path
          d="M465.022,225.279c-0.407-10.322-9.101-18.356-19.426-17.953c-10.312,0.407-18.352,9.104-17.947,19.422
				c0.155,3.945,0.195,7.949,0.104,11.89c-0.145,6.473,3.021,12.243,7.941,15.711c2.931,2.064,6.488,3.313,10.345,3.401
				c10.322,0.229,18.876-7.958,19.105-18.285C465.247,234.756,465.208,229.985,465.022,225.279z"
        />
        <path
          d="M414.835,347.816c-8.277-6.21-19.987-4.524-26.186,3.738c-2.374,3.164-4.874,6.289-7.434,9.298
				c-6.69,7.86-5.745,19.666,2.115,26.361c0.448,0.38,0.901,0.729,1.371,1.057c7.814,5.509,18.674,4.243,24.992-3.171
				c3.057-3.59,6.037-7.323,8.874-11.102C424.767,365.735,423.089,354.017,414.835,347.816z"
        />
        <path
          d="M442.325,280.213c-9.855-3.09-20.35,2.396-23.438,12.251c-1.182,3.765-2.492,7.548-3.906,11.253
				c-3.105,8.156-0.13,17.13,6.69,21.939c1.251,0.879,2.629,1.624,4.126,2.19c9.649,3.682,20.454-1.159,24.132-10.812
				c1.679-4.405,3.237-8.906,4.646-13.382C457.66,293.795,452.178,283.303,442.325,280.213z"
        />
        <path
          d="M197.999,426.402c-16.72-3.002-32.759-8.114-47.968-15.244c-0.18-0.094-0.341-0.201-0.53-0.287
				c-3.584-1.687-7.162-3.494-10.63-5.382c-0.012-0.014-0.034-0.023-0.053-0.031c-6.363-3.504-12.573-7.381-18.606-11.628
				C32.24,331.86,11.088,209.872,73.062,121.901c13.476-19.122,29.784-35.075,47.965-47.719c0.224-0.156,0.448-0.311,0.67-0.468
				c64.067-44.144,151.06-47.119,219.089-1.757l-14.611,21.111c-4.062,5.876-1.563,10.158,5.548,9.518l63.467-5.682
				c7.12-0.64,11.378-6.799,9.463-13.675L387.61,21.823c-1.908-6.884-6.793-7.708-10.859-1.833l-14.645,21.161
				C312.182,7.638,252.303-5.141,192.87,5.165c-5.986,1.036-11.888,2.304-17.709,3.78c-0.045,0.008-0.081,0.013-0.117,0.021
				c-0.225,0.055-0.453,0.128-0.672,0.189C123.122,22.316,78.407,52.207,46.5,94.855c-0.269,0.319-0.546,0.631-0.8,0.978
				c-1.061,1.429-2.114,2.891-3.145,4.353c-1.686,2.396-3.348,4.852-4.938,7.308c-0.199,0.296-0.351,0.597-0.525,0.896
				C10.762,149.191-1.938,196.361,0.24,244.383c0.005,0.158-0.004,0.317,0,0.479c0.211,4.691,0.583,9.447,1.088,14.129
				c0.027,0.302,0.094,0.588,0.145,0.89c0.522,4.708,1.177,9.427,1.998,14.145c8.344,48.138,31.052,91.455,65.079,125.16
				c0.079,0.079,0.161,0.165,0.241,0.247c0.028,0.031,0.059,0.047,0.086,0.076c9.142,9.017,19.086,17.357,29.793,24.898
				c28.02,19.744,59.221,32.795,92.729,38.808c10.167,1.827,19.879-4.941,21.703-15.103
				C214.925,437.943,208.163,428.223,197.999,426.402z"
        />
        <path
          d="M221.124,83.198c-8.363,0-15.137,6.78-15.137,15.131v150.747l137.87,71.271c2.219,1.149,4.595,1.69,6.933,1.69
				c5.476,0,10.765-2.982,13.454-8.185c3.835-7.426,0.933-16.549-6.493-20.384l-121.507-62.818V98.329
				C236.243,89.978,229.477,83.198,221.124,83.198z"
        />
      </g>
    </svg>
  )
}

export const ArrowLeft = ({ size, color, ...props }) => {
  return (
    <svg
      version="1.1"
      xmlns="http://www.w3.org/2000/svg"
      width={size}
      height={size}
      viewBox="0 0 792.082 792.082"
      fill={color}
      {...props}
    >
      <path
        d="M317.896,396.024l304.749-276.467c27.36-27.36,27.36-71.677,0-99.037s-71.677-27.36-99.036,0L169.11,342.161
          c-14.783,14.783-21.302,34.538-20.084,53.897c-1.218,19.359,5.301,39.114,20.084,53.897l354.531,321.606
          c27.36,27.36,71.677,27.36,99.037,0s27.36-71.677,0-99.036L317.896,396.024z"
      />
    </svg>
  )
}

export const ArrowRight = ({ size, color, style, ...props }) => {
  return (
    <svg
      version="1.1"
      xmlns="http://www.w3.org/2000/svg"
      width={size}
      height={size}
      viewBox="0 0 792.082 792.082"
      fill={color}
      style={{ ...style, transform: 'rotateZ(180deg)' }}
      {...props}
    >
      <path
        d="M317.896,396.024l304.749-276.467c27.36-27.36,27.36-71.677,0-99.037s-71.677-27.36-99.036,0L169.11,342.161
          c-14.783,14.783-21.302,34.538-20.084,53.897c-1.218,19.359,5.301,39.114,20.084,53.897l354.531,321.606
          c27.36,27.36,71.677,27.36,99.037,0s27.36-71.677,0-99.036L317.896,396.024z"
      />
    </svg>
  )
}

export const VideoPlay = ({ size, color, ...props }) => {
  return (
    <svg
      version="1.1"
      xmlns="http://www.w3.org/2000/svg"
      width={size}
      height={size}
      viewBox="0 0 142.448 142.448"
      fill={color}
      {...props}
    >
      <g>
        <path
          style="fill:#1D1D1B;"
          d="M142.411,68.9C141.216,31.48,110.968,1.233,73.549,0.038c-20.361-0.646-39.41,7.104-53.488,21.639
   C6.527,35.65-0.584,54.071,0.038,73.549c1.194,37.419,31.442,67.667,68.861,68.861c0.779,0.025,1.551,0.037,2.325,0.037
   c19.454,0,37.624-7.698,51.163-21.676C135.921,106.799,143.033,88.377,142.411,68.9z M111.613,110.336
   c-10.688,11.035-25.032,17.112-40.389,17.112c-0.614,0-1.228-0.01-1.847-0.029c-29.532-0.943-53.404-24.815-54.348-54.348
   c-0.491-15.382,5.122-29.928,15.806-40.958c10.688-11.035,25.032-17.112,40.389-17.112c0.614,0,1.228,0.01,1.847,0.029
   c29.532,0.943,53.404,24.815,54.348,54.348C127.91,84.76,122.296,99.306,111.613,110.336z"
        />
        <path
          style="fill:#1D1D1B;"
          d="M94.585,67.086L63.001,44.44c-3.369-2.416-8.059-0.008-8.059,4.138v45.293
   c0,4.146,4.69,6.554,8.059,4.138l31.583-22.647C97.418,73.331,97.418,69.118,94.585,67.086z"
        />
      </g>
    </svg>
  )
}
